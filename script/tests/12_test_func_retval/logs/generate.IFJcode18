.IFJcode18
DEFVAR GF@$des
DEFVAR GF@$des1
DEFVAR GF@$des2
DEFVAR GF@$eq
DEFVAR GF@$jump
DEFVAR GF@$tmp
DEFVAR GF@$type
MOVE GF@$des nil@nil


JUMP $end$function$0
LABEL fun
PUSHFRAME
DEFVAR LF@a
MOVE LF@a LF@%1

WRITE LF@a
TYPE GF@$type LF@a
JUMPIFNEQ $fun$1$int$string1 GF@$type string@string
EXIT int@4
LABEL $fun$1$int$string1
MOVE GF@$des int@1
JUMPIFNEQ $fun$1$int$float1 GF@$type string@float
INT2FLOAT GF@$des int@1
LABEL $fun$1$int$float1
MOVE GF@$eq GF@$des
ADD GF@$des LF@a GF@$des
PUSHS GF@$des

POPFRAME
RETURN
LABEL $end$function$0

CREATEFRAME
DEFVAR TF@%1
MOVE TF@%1 int@1
CALL fun
PUSHS GF@$des
DEFVAR GF@x
POPS GF@x
WRITE GF@x
WRITE string@\010

JUMP $end$function$1
LABEL baz
PUSHFRAME
DEFVAR LF@a
MOVE LF@a LF@%1
DEFVAR LF@b
MOVE LF@b LF@%2

DEFVAR LF@inter
MOVE LF@inter int@10
PUSHS LF@inter
WRITE LF@a
WRITE LF@b
TYPE GF@$type LF@a
JUMPIFEQ $baz$6$int0 GF@$type string@int
JUMPIFEQ $baz$6$float0 GF@$type string@float
JUMPIFEQ $baz$6$string0 GF@$type string@string
LABEL $baz$6$int0
TYPE GF@$type LF@b
JUMPIFNEQ $baz$6$int$string GF@$type string@string
EXIT int@4
LABEL $baz$6$int$string
MOVE GF@$des LF@a
JUMPIFNEQ $baz$6$int$float GF@$type string@float
INT2FLOAT GF@$des LF@a
LABEL $baz$6$int$float
MOVE GF@$eq GF@$des
ADD GF@$des GF@$des LF@b
JUMP ENDTHISMADNESS6
LABEL $baz$6$float0
TYPE GF@$type LF@b
JUMPIFNEQ $baz$6$float$string GF@$type string@string
EXIT int@4
LABEL $baz$6$float$string
MOVE GF@$des LF@b
JUMPIFEQ $baz$6$float GF@$type string@float
INT2FLOAT GF@$des LF@b
LABEL $baz$6$float
MOVE GF@$eq GF@$des
ADD GF@$des LF@a GF@$des
JUMP ENDTHISMADNESS6
LABEL $baz$6$string0
TYPE GF@$type LF@b
JUMPIFEQ $baz$6$string$string GF@$type string@string
EXIT int@4
LABEL $baz$6$string$string
MOVE GF@$des LF@a
CONCAT GF@$des GF@$des LF@b
LABEL ENDTHISMADNESS6
MOVE GF@$des1 GF@$des
TYPE GF@$type GF@$des1
JUMPIFEQ $baz$7$int0 GF@$type string@int
JUMPIFEQ $baz$7$float0 GF@$type string@float
JUMPIFEQ $baz$7$string0 GF@$type string@string
LABEL $baz$7$int0
TYPE GF@$type LF@inter
JUMPIFNEQ $baz$7$int$string GF@$type string@string
EXIT int@4
LABEL $baz$7$int$string
MOVE GF@$des GF@$des1
JUMPIFNEQ $baz$7$int$float GF@$type string@float
INT2FLOAT GF@$des GF@$des1
LABEL $baz$7$int$float
MOVE GF@$eq GF@$des
SUB GF@$des GF@$des LF@inter
JUMP ENDTHISMADNESS7
LABEL $baz$7$float0
TYPE GF@$type LF@inter
JUMPIFNEQ $baz$7$float$string GF@$type string@string
EXIT int@4
LABEL $baz$7$float$string
MOVE GF@$des LF@inter
JUMPIFEQ $baz$7$float GF@$type string@float
INT2FLOAT GF@$des LF@inter
LABEL $baz$7$float
MOVE GF@$eq GF@$des
SUB GF@$des GF@$des1 GF@$des
JUMP ENDTHISMADNESS7
LABEL $baz$7$string0
TYPE GF@$type LF@inter
JUMPIFEQ $baz$7$string$string GF@$type string@string
EXIT int@4
LABEL $baz$7$string$string
MOVE GF@$des GF@$des1
SUB GF@$des GF@$des LF@inter
LABEL ENDTHISMADNESS7
PUSHS GF@$des

POPFRAME
RETURN
LABEL $end$function$1

CREATEFRAME
DEFVAR TF@%1
MOVE TF@%1 float@0x1.4p+1
DEFVAR TF@%2
MOVE TF@%2 int@5
CALL baz
PUSHS GF@$des
DEFVAR GF@y
POPS GF@y
WRITE GF@y
WRITE string@\010

JUMP $end$function$2
LABEL bum
PUSHFRAME

CREATEFRAME
DEFVAR TF@%1
MOVE TF@%1 int@1
DEFVAR TF@%2
MOVE TF@%2 int@1
CALL baz
PUSHS GF@$des

POPFRAME
RETURN
LABEL $end$function$2

CREATEFRAME
CALL bum
PUSHS GF@$des
POPS GF@y
WRITE GF@y
WRITE string@\010

JUMP $end$function$3
LABEL bazmeg
PUSHFRAME
DEFVAR LF@a
MOVE LF@a LF@%1
DEFVAR LF@b
MOVE LF@b LF@%2

TYPE GF@$type LF@a
JUMPIFEQ $bazmeg$12$int0 GF@$type string@int
JUMPIFEQ $bazmeg$12$float0 GF@$type string@float
JUMPIFEQ $bazmeg$12$string0 GF@$type string@string
LABEL $bazmeg$12$int0
TYPE GF@$type LF@b
JUMPIFNEQ $bazmeg$12$int$string GF@$type string@string
EXIT int@4
LABEL $bazmeg$12$int$string
MOVE GF@$des LF@a
JUMPIFNEQ $bazmeg$12$int$float GF@$type string@float
INT2FLOAT GF@$des LF@a
LABEL $bazmeg$12$int$float
MOVE GF@$eq GF@$des
LT GF@$des GF@$des LF@b
JUMP ENDTHISMADNESS12
LABEL $bazmeg$12$float0
TYPE GF@$type LF@b
JUMPIFNEQ $bazmeg$12$float$string GF@$type string@string
EXIT int@4
LABEL $bazmeg$12$float$string
MOVE GF@$des LF@b
JUMPIFEQ $bazmeg$12$float GF@$type string@float
INT2FLOAT GF@$des LF@b
LABEL $bazmeg$12$float
MOVE GF@$eq GF@$des
LT GF@$des LF@a GF@$des
JUMP ENDTHISMADNESS12
LABEL $bazmeg$12$string0
TYPE GF@$type LF@b
JUMPIFEQ $bazmeg$12$string$string GF@$type string@string
EXIT int@4
LABEL $bazmeg$12$string$string
MOVE GF@$des LF@a
LT GF@$des GF@$des LF@b
LABEL ENDTHISMADNESS12
PUSHS GF@$des
PUSHS bool@false
JUMPIFEQS $if$0

TYPE GF@$type LF@a
JUMPIFNEQ $bazmeg$13$int$string1 GF@$type string@string
EXIT int@4
LABEL $bazmeg$13$int$string1
MOVE GF@$des int@1
JUMPIFNEQ $bazmeg$13$int$float1 GF@$type string@float
INT2FLOAT GF@$des int@1
LABEL $bazmeg$13$int$float1
MOVE GF@$eq GF@$des
ADD GF@$des LF@a GF@$des
PUSHS GF@$des

JUMP $endif$0
LABEL $if$0

TYPE GF@$type LF@b
JUMPIFNEQ $bazmeg$14$int$string1 GF@$type string@string
EXIT int@4
LABEL $bazmeg$14$int$string1
MOVE GF@$des int@1
JUMPIFNEQ $bazmeg$14$int$float1 GF@$type string@float
INT2FLOAT GF@$des int@1
LABEL $bazmeg$14$int$float1
MOVE GF@$eq GF@$des
ADD GF@$des LF@b GF@$des
PUSHS GF@$des
LABEL $endif$0


POPFRAME
RETURN
LABEL $end$function$3

CREATEFRAME
DEFVAR TF@%1
MOVE TF@%1 int@1
DEFVAR TF@%2
MOVE TF@%2 int@2
CALL bazmeg
PUSHS GF@$des
POPS GF@y
WRITE GF@y
WRITE string@\010
CREATEFRAME
DEFVAR TF@%1
MOVE TF@%1 float@0x1.cp+1
DEFVAR TF@%2
MOVE TF@%2 int@2
CALL bazmeg
PUSHS GF@$des
POPS GF@y
WRITE GF@y
WRITE string@\010

JUMP $end$function$4
LABEL baz_while
PUSHFRAME

DEFVAR LF@i
MOVE LF@i int@0
PUSHS LF@i

LABEL $while$0
TYPE GF@$type LF@i
JUMPIFNEQ $baz_while$19$int$string1 GF@$type string@string
EXIT int@4
LABEL $baz_while$19$int$string1
MOVE GF@$des int@2
JUMPIFNEQ $baz_while$19$int$float1 GF@$type string@float
INT2FLOAT GF@$des int@2
LABEL $baz_while$19$int$float1
MOVE GF@$eq GF@$des
LT GF@$des LF@i GF@$des
PUSHS GF@$des
PUSHS bool@false
 JUMPIFEQS $end_while$0

WRITE LF@i
TYPE GF@$type LF@i
JUMPIFNEQ $baz_while$21$int$string1 GF@$type string@string
EXIT int@4
LABEL $baz_while$21$int$string1
MOVE GF@$des int@1
JUMPIFNEQ $baz_while$21$int$float1 GF@$type string@float
INT2FLOAT GF@$des int@1
LABEL $baz_while$21$int$float1
MOVE GF@$eq GF@$des
ADD GF@$des LF@i GF@$des
PUSHS GF@$des
POPS LF@i
PUSHS LF@i

JUMP $while$0
LABEL $end_while$0

PUSHS nil@nil

POPFRAME
RETURN
LABEL $end$function$4

CREATEFRAME
CALL baz_while
PUSHS GF@$des
POPS GF@y
WRITE string@\010
WRITE GF@y
WRITE string@\010

JUMP $end$function$5
LABEL fun_assign
PUSHFRAME
DEFVAR LF@ifx
MOVE LF@ifx LF@%1
DEFVAR LF@a
MOVE LF@a LF@%2
DEFVAR LF@b
MOVE LF@b LF@%3

TYPE GF@$type LF@a
JUMPIFEQ $fun_assign$25$int0 GF@$type string@int
JUMPIFEQ $fun_assign$25$float0 GF@$type string@float
JUMPIFEQ $fun_assign$25$string0 GF@$type string@string
LABEL $fun_assign$25$int0
TYPE GF@$type LF@b
JUMPIFNEQ $fun_assign$25$int$string GF@$type string@string
EXIT int@4
LABEL $fun_assign$25$int$string
MOVE GF@$des LF@a
JUMPIFNEQ $fun_assign$25$int$float GF@$type string@float
INT2FLOAT GF@$des LF@a
LABEL $fun_assign$25$int$float
MOVE GF@$eq GF@$des
ADD GF@$des GF@$des LF@b
JUMP ENDTHISMADNESS25
LABEL $fun_assign$25$float0
TYPE GF@$type LF@b
JUMPIFNEQ $fun_assign$25$float$string GF@$type string@string
EXIT int@4
LABEL $fun_assign$25$float$string
MOVE GF@$des LF@b
JUMPIFEQ $fun_assign$25$float GF@$type string@float
INT2FLOAT GF@$des LF@b
LABEL $fun_assign$25$float
MOVE GF@$eq GF@$des
ADD GF@$des LF@a GF@$des
JUMP ENDTHISMADNESS25
LABEL $fun_assign$25$string0
TYPE GF@$type LF@b
JUMPIFEQ $fun_assign$25$string$string GF@$type string@string
EXIT int@4
LABEL $fun_assign$25$string$string
MOVE GF@$des LF@a
CONCAT GF@$des GF@$des LF@b
LABEL ENDTHISMADNESS25
PUSHS GF@$des
DEFVAR LF@sum
POPS LF@sum
PUSHS LF@sum
TYPE GF@$type LF@a
JUMPIFEQ $fun_assign$26$int0 GF@$type string@int
JUMPIFEQ $fun_assign$26$float0 GF@$type string@float
JUMPIFEQ $fun_assign$26$string0 GF@$type string@string
LABEL $fun_assign$26$int0
TYPE GF@$type LF@b
JUMPIFNEQ $fun_assign$26$int$string GF@$type string@string
EXIT int@4
LABEL $fun_assign$26$int$string
MOVE GF@$des LF@a
JUMPIFNEQ $fun_assign$26$int$float GF@$type string@float
INT2FLOAT GF@$des LF@a
LABEL $fun_assign$26$int$float
MOVE GF@$eq GF@$des
ADD GF@$des GF@$des LF@b
JUMP ENDTHISMADNESS26
LABEL $fun_assign$